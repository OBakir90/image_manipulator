{"version":3,"sources":["components/ImageInput.js","components/GetWidth.js","components/ViewImage.js","images/aaron-burden-Bycd2wF5vQU-unsplash.jpg","images/syd-sujuaan-2OowobmZRFE-unsplash.jpg","images/colors.PNG","images/crop.PNG","images/faces.PNG","App.js","reportWebVitals.js","index.js"],"names":["ImageInput","imageUrl","setImageUrl","detectFaces","setFaceBox","getColors","croppImage","Container","StyledInputGroup","size","StyledFormControl","placeholder","aria-label","aria-describedby","onChange","e","target","value","accept","StyledInputGroupAppend","StyledButton","id","onClick","styled","div","FormControl","InputGroup","Append","Button","GetWidth","useState","window","innerWidth","width","setWidth","useEffect","handleResize","addEventListener","removeEventListener","ViewImage","faceBox","colors","selected","imgDim","setImgDim","frames","setFrames","croppedImage","setCroppedImage","uploadedImage","useRef","screenWidth","console","log","boxes","map","face","index","push","top","top_row","height","left","left_col","right_col","bottom_row","BasicImg","src","alt","ref","onLoad","Image","clientWidth","clientHeight","Number","frame","FaceBox","style","StyledCropper","guides","crop","cropper","current","getCroppedCanvas","toDataURL","CroppedImg","ColorsCont","color","i","ColorCont","ColorBox","backgroundColor","w3c","hex","ColorName","name","Cropper","img","App","setSelected","setColors","app","Clarifai","apiKey","Screen","className","Left","Img","faces","Header","workflow","predict","then","response","results","outputs","data","regions","p","region_info","bounding_box","catch","Right","right","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8aca28a0.chunk.js","sourcesContent":["import {InputGroup, FormControl, Button} from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst ImageInput = ({imageUrl, setImageUrl, detectFaces, setFaceBox, getColors, croppImage}) => {\r\n   \r\n    return (\r\n        <Container>\r\n            <StyledInputGroup size=\"lg\" >\r\n                <StyledFormControl\r\n                    placeholder=\"Enter Image`s URL\"\r\n                    aria-label=\"Image`s URL\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    onChange={(e)=>{\r\n                        setFaceBox(null)\r\n                        setImageUrl(`${e.target.value}`)\r\n                    }}\r\n                    accept=\"image\"\r\n                />\r\n                <StyledInputGroupAppend>\r\n                    <StyledButton id=\"basic-addon2\" onClick={detectFaces}>Face Detector</StyledButton>\r\n                    <StyledButton id=\"basic-addon2\" onClick={getColors}>Color Scheme</StyledButton>               \r\n                    <StyledButton id=\"basic-addon2\" onClick={croppImage}>Image Cropper</StyledButton>\r\n                </StyledInputGroupAppend>\r\n            </StyledInputGroup>  \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ImageInput\r\n\r\n\r\nconst Container = styled.div`\r\n    margin-top:50px;\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n`\r\n\r\nconst StyledFormControl = styled(FormControl)`\r\n    width:75%;\r\n    height:40px; \r\n    font-size:1.1rem;\r\n    border-radius:4px;\r\n    @media (max-width: 768px) {\r\n        height:30px; \r\n        font-size:1rem;   \r\n    }\r\n    @media (max-width: 568px) {\r\n        height:20px; \r\n        font-size:0.8rem;  \r\n    }\r\n`\r\n\r\nconst StyledInputGroup=styled(InputGroup)`\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    width:90%;\r\n    color:red;\r\n`\r\nconst StyledInputGroupAppend=styled(InputGroup.Append)`\r\n    display:flex;\r\n    justify-content:center;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n    width:32%;\r\n    height:60px;\r\n    margin:40px 1%;\r\n    background-color:#F44006;\r\n    color:#fff;\r\n    font-size:18px;\r\n    font-wight:bold;\r\n    border-radius:4px;\r\n    @media (max-width: 768px) {\r\n        height:45px;   \r\n        font-size:14px;\r\n    }\r\n    @media (max-width: 568px) {\r\n        height:30px;   \r\n        font-size:10px; \r\n    }\r\n`","import React,{ useState, useEffect } from 'react';\r\n\r\nconst GetWidth = () => {\r\n    const [width, setWidth] = useState(window.innerWidth)\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWidth(window.innerWidth)\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, [])\r\n\r\n    return width;\r\n}\r\n\r\nexport default GetWidth\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport {Image} from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.min.css\";\r\nimport GetWidth from './GetWidth'\r\n\r\nconst ViewImage = ({imageUrl, faceBox, colors, selected}) => {\r\n    const [imgDim, setImgDim] = useState(null)\r\n    const [frames, setFrames] = useState([])\r\n    const [croppedImage, setCroppedImage] = useState(null)\r\n    const uploadedImage = useRef(null)\r\n  \r\n    const screenWidth = GetWidth();\r\n    console.log({screenWidth})\r\n\r\n    const onCrop = () => {\r\n        const imageElement = uploadedImage.current;\r\n        const cropper = imageElement.cropper;\r\n        setCroppedImage(cropper.getCroppedCanvas().toDataURL())\r\n    };\r\n \r\n\r\n    useEffect(()=>{\r\n        let boxes=[]\r\n        console.log('facebox', faceBox)\r\n        faceBox&&faceBox.map((face, index)=>{\r\n            boxes.push({top:face.top_row*imgDim.height,\r\n            left:face.left_col*imgDim.width,\r\n            width:face.right_col*imgDim.width-face.left_col*imgDim.width,        \r\n            height:face.bottom_row*imgDim.height-face.top_row*imgDim.height\r\n            })\r\n        })\r\n        setFrames(boxes)\r\n    },[imgDim, faceBox] )\r\n\r\n\r\n    const getImgDimensions = ({target:Image})=>{\r\n        console.log('image', Image, Image.clientWidth, Image.width, Image.clientHeight, Image.height)\r\n        setImgDim({\r\n            width:Number(Image.width),\r\n            height:Number(Image.height)\r\n        }) \r\n    }\r\n    return (\r\n        <Container>\r\n            {!selected&&imageUrl&&<BasicImg src={imageUrl} alt='unselected'/>}\r\n            {selected==='face'&&imageUrl&&<><img id='up_img' ref={uploadedImage} src={imageUrl} onLoad={getImgDimensions} alt='myimage' width='80%' height='auto'/>   \r\n                {frames&&frames.map(frame=><FaceBox style={frame?{top:frame.top, left:frame.left, width:frame.width, height:frame.height}:null}/>)}</>        \r\n            }\r\n            {selected==='cropp'&&imageUrl&&<>\r\n                <StyledCropper\r\n                    src={imageUrl} \r\n                    guides={false}\r\n                    crop={onCrop}\r\n                    ref={uploadedImage}\r\n                    alt='myimage'\r\n                    style={{width:screenWidth*0.5, height:'auto'}}\r\n                />\r\n                <CroppedImg src={croppedImage} alt=\"Cropped_Image\" style={{width:screenWidth*0.5}}/>\r\n            </>\r\n            }\r\n            {selected==='colors'&&imageUrl&&<>\r\n                <img src={imageUrl} alt='unselected' style={{width: '80%', height:'auto'}}/>\r\n                {colors&&<ColorsCont>\r\n                            {colors.map((color,i)=>{\r\n                                return  (\r\n                                    <ColorCont>\r\n                                        <ColorBox key={i} style={{backgroundColor:color.w3c.hex}}/>\r\n                                        <ColorName>{color.w3c.name}</ColorName>\r\n                                    </ColorCont>\r\n                                )\r\n                                })\r\n                            }\r\n                        </ColorsCont>\r\n                }                  \r\n            </>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ViewImage\r\n\r\nconst Container =styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    width:100%;\r\n`\r\n\r\nconst StyledCropper=styled(Cropper)`\r\n    width:500px;\r\n    height:auto;\r\n    @media (max-width: 768px) {\r\n        width:300px; \r\n        height:200px;\r\n    }\r\n    @media (max-width: 568px) {\r\n        width:230px; \r\n        height:120px;\r\n    }\r\n    \r\n`\r\n\r\nconst FaceBox = styled.div`\r\n    position: absolute;\r\n    box-shadow: 0 0 0 3px red inset;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n`\r\n\r\nconst CroppedImg = styled.img`\r\n    height:360px;\r\n    border:2px solid #f1f1f1;\r\n    @media (max-width: 768px) {\r\n        height:240px;\r\n    }\r\n    @media (max-width: 568px) {\r\n        height:180px;\r\n    }\r\n    \r\n`\r\n\r\nconst ColorsCont = styled.div`\r\n    display:flex;\r\n    width:80%;\r\n    justify-content:center;\r\n    flex-wrap:wrap;\r\n`\r\n\r\nconst BasicImg = styled.img`\r\n    width:80%;\r\n    height:auto;\r\n`\r\n\r\nconst ColorCont=styled.div`\r\n    display:flex; \r\n    flex-direction:column; \r\n    align-items:center;\r\n`\r\n\r\nconst ColorBox=styled.div`\r\n    display:flex; \r\n    width:40px; \r\n    height:30px;\r\n    margin:8px;\r\n    @media (max-width: 768px) {\r\n        width:25px; \r\n        height:15px;\r\n    }\r\n    @media (max-width: 568px) {\r\n        width:14px; \r\n        height:8px;\r\n    }\r\n`\r\n\r\nconst ColorName = styled.div`\r\n    font-size:10px;\r\n    @media (max-width: 768px) {\r\n        font-size:8px;\r\n    }\r\n    @media (max-width: 568px) {\r\n        font-size:6px;\r\n    }\r\n`","export default __webpack_public_path__ + \"static/media/aaron-burden-Bycd2wF5vQU-unsplash.6cf3fc8c.jpg\";","export default __webpack_public_path__ + \"static/media/syd-sujuaan-2OowobmZRFE-unsplash.f027e42d.jpg\";","export default __webpack_public_path__ + \"static/media/colors.7512e15b.PNG\";","export default __webpack_public_path__ + \"static/media/crop.d2cba4d4.PNG\";","export default __webpack_public_path__ + \"static/media/faces.f7fbd01d.PNG\";","import React, {useState, useEffect} from 'react'\nimport ImageInput from './components/ImageInput'\nimport ViewImage from './components/ViewImage'\nimport styled from 'styled-components'\nimport Clarifai from 'clarifai';\n\nimport left from './images/aaron-burden-Bycd2wF5vQU-unsplash.jpg'\nimport right from './images/syd-sujuaan-2OowobmZRFE-unsplash.jpg'\nimport color from './images/colors.PNG'\nimport crop from './images/crop.PNG'\nimport faces from './images/faces.PNG'\n\n\nconst App=()=>{\n  const [imageUrl, setImageUrl] = useState(null)  \n  const [selected, setSelected] = useState(null)\n  const [faceBox, setFaceBox] = useState(null)\n  const [colors, setColors] = useState(null)\n\n  const app = new Clarifai.App({\n    apiKey: '3e8c5766751947cdbe5200ca237f63c0'\n  });\n\n  const detectFaces = ()=>{\n    console.log('face called')\n    setSelected('face')\n    imageUrl?app.workflow.predict(\"123456\", imageUrl).then(\n        (response)=>{\n          // console.log('face called',response.results[0].outputs[2].data.regions.map(p=>p.region_info.bounding_box));\n          setFaceBox(response.results[0].outputs[2].data.regions.map(p=>p.region_info.bounding_box))\n        },\n    ).catch(\n      console.log('error')\n    ) : console.log('Please enter a url')  \n  }\n\n  const croppImage = ()=>{\n    setSelected('cropp')\n  }\n\n  const getColors = ()=>{\n    setSelected('colors')\n    imageUrl?app.workflow.predict('1234567', imageUrl).then(\n      (response)=>{\n        setColors(response.results[0].outputs[0].data.colors)\n        console.log('colors', response.results[0].outputs[0].data.colors)\n      },\n    ).catch(\n      console.log('error')\n    ) : console.log('Please enter a url')  \n  }\n\n  return (\n    <Screen className=\"App\">\n      <Left>\n        <Img src={color} alt=''/>\n        <Img src={faces} alt=''/>\n        <Img src={crop} alt=''/> \n      </Left>\n      <Container>\n        <Header>\n          <span style={{color:''}}></span>\n                <span style={{color:'red'}}>I</span>\n                <span style={{color:'yellow'}}>m</span>\n                <span style={{color:'orange'}}>a</span>\n                <span style={{color:'blue'}}>g</span>\n                <span style={{color:'green'}}>e</span> \n                <span> </span>\n                <span style={{color:'black'}}>M</span>\n                <span style={{color:'red'}}>a</span>\n                <span style={{color:'violet'}}>n</span>\n                <span style={{color:'green'}}>i</span>\n                <span style={{color:'brown'}}>p</span>\n                <span style={{color:'turquoise'}}>u</span>\n                <span style={{color:'yellow'}}>l</span>\n                <span style={{color:'orange'}}>a</span>\n                <span style={{color:'blue'}}>t</span>\n                <span style={{color:'black'}}>o</span>\n                <span style={{color:'red'}}>r</span>\n               </Header>\n        <ImageInput imageUrl={imageUrl} setImageUrl={setImageUrl} setFaceBox={setFaceBox} detectFaces={detectFaces} croppImage={croppImage} getColors={getColors}/>\n        <ViewImage imageUrl={imageUrl} faceBox={faceBox} selected={selected} colors={colors}/>\n      </Container>\n      <Right>\n        <Img src={crop} alt=''/> \n        <Img src={color} alt=''/>\n        <Img src={faces} alt=''/>\n      </Right>\n    </Screen>\n  );\n}\n\nexport default App;\n\n\nconst Screen = styled.div`\n  width:100%;\n  min-height:100vh;\n  justify-content:center;\n  background-color:#f1f1f1;\n  display:flex;\n\n`\n\nconst Container=styled.div`\n  display:flex;\n  flex-direction:column;\n  width:60%;\n  align-items:center;\n`\nconst Header =styled.div`\n  font-size:90px;\n  font-weight:900;\n  font-family:East Sea Dokdo;\n  @media (max-width: 768px) {\n    font-size:66px;\n  }\n  @media (max-width: 568px) {\n    font-size:36px; \n  }\n\n`\nconst Img=styled.img`\n  width:90%;\n  margin:35px 5%;\n`\n\nconst Left=styled.div`\n  width:20%;\n  background-image: url(${left});\n  display:flex;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n`\n\nconst Right=styled.div`\n  width:20%;  \n  background-image: url(${right});\n  display:flex;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n`","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}